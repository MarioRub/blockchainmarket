{
  "contractName": "UserFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "checkRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "UsersIds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "name": "userId",
          "type": "uint256"
        },
        {
          "name": "userAddr",
          "type": "address"
        },
        {
          "name": "userName",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newAddr",
          "type": "address"
        }
      ],
      "name": "setNetAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROLE_SYS_ADMIN",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newContractAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userRegistered",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROLE_STORE_OWNER",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "items",
      "outputs": [
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "userId",
          "type": "uint256"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userItems",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "userId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "userAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "userName",
          "type": "string"
        }
      ],
      "name": "NewUserSignUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContractPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContractUnpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "role",
          "type": "string"
        }
      ],
      "name": "RoleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "role",
          "type": "string"
        }
      ],
      "name": "RoleRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_userName",
          "type": "string"
        }
      ],
      "name": "signUp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"checkRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"UsersIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"hasRole\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"userId\",\"type\":\"uint256\"},{\"name\":\"userAddr\",\"type\":\"address\"},{\"name\":\"userName\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAddr\",\"type\":\"address\"}],\"name\":\"setNetAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROLE_SYS_ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userRegistered\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROLE_STORE_OWNER\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userName\",\"type\":\"string\"}],\"name\":\"signUp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"name\":\"itemId\",\"type\":\"uint256\"},{\"name\":\"userId\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userItems\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"userAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"userName\",\"type\":\"string\"}],\"name\":\"NewUserSignUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"role\",\"type\":\"string\"}],\"name\":\"RoleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"role\",\"type\":\"string\"}],\"name\":\"RoleRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"checkRole(address,string)\":{\"details\":\"reverts if addr does not have role\",\"params\":{\"_operator\":\"address\",\"_role\":\"the name of the role // reverts\"}},\"hasRole(address,string)\":{\"details\":\"determine if addr has role\",\"params\":{\"_operator\":\"address\",\"_role\":\"the name of the role\"},\"return\":\"bool\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/luminode/Training/blockchainmarket/contracts/UserFactory.sol\":\"UserFactory\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/luminode/Training/blockchainmarket/contracts/UserFactory.sol\":{\"keccak256\":\"0x6abe62aeea05e8ef57aa99bf299709ccc81940465d1da678ac36614ad597d165\",\"urls\":[\"bzzr://86f2fe5d138201b8d7e415f3dc3292851fc75b540c8d0f01f09e2b844e1e37a1\"]},\"contracts/AccessControl.sol\":{\"keccak256\":\"0x5fb09a9c6ae1aed1fd792b372b10609ba5fc647c57e979797d7e264b074b945c\",\"urls\":[\"bzzr://71cfed6ab4340034d28ca9e901b36f4e2cc92b833ee8f16f7ba58ba9e06adaaa\"]},\"contracts/BlockchainMarketBase.sol\":{\"keccak256\":\"0xa2accb8561c47658e82e510f8c344d02e5d610ebcc8e7e3d8d4568c007b54790\",\"urls\":[\"bzzr://6ef694e07e26c6944bb0b5e454a5173f7c57788ec0ee9ac946eb0ef543117c86\"]},\"contracts/BlockchainMarketInterface.sol\":{\"keccak256\":\"0x5674ede178efbb0df6e3343e7895f8ea3b63582d38aa7cedb8d2e5984c2cb5a5\",\"urls\":[\"bzzr://3299243c23aedfc3798cbf0c6c2d995f5340b13de28fb9372bfdc0d72b512fca\"]},\"contracts/rbac/RBAC.sol\":{\"keccak256\":\"0x55b6ca23bf7a82273f0af6b323e5bf4f4c9b4c795900efdfb5d1961fe26f3fb3\",\"urls\":[\"bzzr://a0579478486a5a2088154efb0888807666939eb612eb3c3a6cfcba86e78582de\"]},\"contracts/rbac/Roles.sol\":{\"keccak256\":\"0xc6897a4fc2c95094af46a8e330d2373145b08deeeadf36d4809ca148c054fec1\",\"urls\":[\"bzzr://e928fb9db6eebc13d15e74fd937b5cd9c11712c5d3e35897ccac5930462e46eb\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600160006101000a81548160ff02191690831515021790555060018060006101000a81548160ff02191690831515021790555062000080336040518060400160405280600e81526020017f726f6c652f7379732d61646d696e000000000000000000000000000000000000815250620000cd60201b60201c565b620000c7336040518060400160405280601081526020017f726f6c652f73746f72652d6f776e657200000000000000000000000000000000815250620000cd60201b60201c565b62000269565b62000151826000836040518082805190602001908083835b602083106200010a5780518252602082019150602081019050602083039250620000e5565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206200020b60201b620013fe1790919060201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b700489826040518080602001828103825283818151815260200191508051906020019080838360005b83811015620001cc578082015181840152602081019050620001af565b50505050905090810190601f168015620001fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61152d80620002796000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80635c975abb116100975780638456cb59116100665780638456cb5914610619578063adcfb4fc14610623578063bfb231d2146106b0578063f81b46a91461076c576100f5565b80635c975abb146104bc5780636af04a57146104de5780636b7a42e314610528578063804ce1df14610596576100f5565b8063365b98b2116100d3578063365b98b21461030a5780633f4ba83a146103eb5780634e730d73146103f557806356de8ccd14610439576100f5565b80630988ca8c146100fa5780630e5fe9ef146101d5578063217fe6c614610217575b600080fd5b6101d36004803603604081101561011057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561014d57600080fd5b82018360208201111561015f57600080fd5b8035906020019184600183028401116401000000008311171561018157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107b8565b005b610201600480360360208110156101eb57600080fd5b8101908080359060200190929190505050610837565b6040518082815260200191505060405180910390f35b6102f06004803603604081101561022d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561026a57600080fd5b82018360208201111561027c57600080fd5b8035906020019184600183028401116401000000008311171561029e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610858565b604051808215151515815260200191505060405180910390f35b6103366004803603602081101561032057600080fd5b81019080803590602001909291905050506108dd565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103ae578082015181840152602081019050610393565b50505050905090810190601f1680156103db5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6103f36109cc565b005b6104376004803603602081101561040b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad6565b005b610441610c3d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610481578082015181840152602081019050610466565b50505050905090810190601f1680156104ae5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104c4610c76565b604051808215151515815260200191505060405180910390f35b6104e6610c89565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105546004803603602081101561053e57600080fd5b8101908080359060200190929190505050610cae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61059e610ce1565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105de5780820151818401526020810190506105c3565b50505050905090810190601f16801561060b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610621610d1a565b005b61069a6004803603602081101561063957600080fd5b810190808035906020019064010000000081111561065657600080fd5b82018360208201111561066857600080fd5b8035906020019184600183028401116401000000008311171561068a57600080fd5b9091929391929390505050610e24565b6040518082815260200191505060405180910390f35b6106dc600480360360208110156106c657600080fd5b8101908080359060200190929190505050611159565b6040518085815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561072e578082015181840152602081019050610713565b50505050905090810190601f16801561075b5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6107a26004803603604081101561078257600080fd5b81019080803590602001909291908035906020019092919050505061122e565b6040518082815260200191505060405180910390f35b610833826000836040518082805190602001908083835b602083106107f257805182526020820191506020810190506020830392506107cf565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902061125c90919063ffffffff16565b5050565b6004818154811061084457fe5b906000526020600020016000915090505481565b60006108d5836000846040518082805190602001908083835b602083106108945780518252602082019150602081019050602083039250610871565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902061127390919063ffffffff16565b905092915050565b600281815481106108ea57fe5b90600052602060002090600302016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109c25780601f10610997576101008083540402835291602001916109c2565b820191906000526020600020905b8154815290600101906020018083116109a557829003601f168201915b5050505050905083565b610a0b336040518060400160405280600e81526020017f726f6c652f7379732d61646d696e0000000000000000000000000000000000008152506107b8565b600160009054906101000a900460ff16610a8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4973206e6f74207061757365640000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600160006101000a81548160ff0219169083151502179055507f0e5e3b3fb504c22cf5c42fa07d521225937514c654007e1f12646f89768d6f9460405160405180910390a1565b610b15336040518060400160405280600e81526020017f726f6c652f7379732d61646d696e0000000000000000000000000000000000008152506107b8565b600160009054906101000a900460ff16610b97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4973206e6f74207061757365640000000000000000000000000000000000000081525060200191505060405180910390fd5b806001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6040518060400160405280600e81526020017f726f6c652f7379732d61646d696e00000000000000000000000000000000000081525081565b600160009054906101000a900460ff1681565b6001809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280601081526020017f726f6c652f73746f72652d6f776e65720000000000000000000000000000000081525081565b610d59336040518060400160405280600e81526020017f726f6c652f7379732d61646d696e0000000000000000000000000000000000008152506107b8565b600160009054906101000a900460ff1615610ddc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f416c72656164792050617573656400000000000000000000000000000000000081525060200191505060405180910390fd5b60018060006101000a81548160ff0219169083151502179055507fab35696f06e428ebc5ceba8cd17f8fed287baf43440206d1943af1ee53e6d26760405160405180910390a1565b6000600160009054906101000a900460ff1615610ea9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f416c72656164792050617573656400000000000000000000000000000000000081525060200191505060405180910390fd5b6000600280549050905060003390506004829080600181540180825580915050906001820390600052602060002001600090919290919091505550600260405180606001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff16815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610ff392919061145c565b50505050806007600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110cc816040518060400160405280601081526020017f726f6c652f73746f72652d6f776e6572000000000000000000000000000000008152506112cc565b8073ffffffffffffffffffffffffffffffffffffffff167f971d5202970f7df6de485a4f216b8e633cc033b64d287d015a021575001cd60683878760405180848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a2819250505092915050565b6003818154811061116657fe5b9060005260206000209060040201600091509050806000015490806001015490806002015490806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112245780601f106111f957610100808354040283529160200191611224565b820191906000526020600020905b81548152906001019060200180831161120757829003601f168201915b5050505050905084565b6008602052816000526040600020818154811061124757fe5b90600052602060002001600091509150505481565b6112668282611273565b61126f57600080fd5b5050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611347826000836040518082805190602001908083835b6020831061130657805182526020820191506020810190506020830392506112e3565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206113fe90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167fbfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b700489826040518080602001828103825283818151815260200191508051906020019080838360005b838110156113c05780820151818401526020810190506113a5565b50505050905090810190601f1680156113ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061149d57805160ff19168380011785556114cb565b828001600101855582156114cb579182015b828111156114ca5782518255916020019190600101906114af565b5b5090506114d891906114dc565b5090565b6114fe91905b808211156114fa5760008160009055506001016114e2565b5090565b9056fea165627a7a723058202221e9691c763b25decfafd0caaa20e701988ff25175ba917165fcb67275559a0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80635c975abb116100975780638456cb59116100665780638456cb5914610619578063adcfb4fc14610623578063bfb231d2146106b0578063f81b46a91461076c576100f5565b80635c975abb146104bc5780636af04a57146104de5780636b7a42e314610528578063804ce1df14610596576100f5565b8063365b98b2116100d3578063365b98b21461030a5780633f4ba83a146103eb5780634e730d73146103f557806356de8ccd14610439576100f5565b80630988ca8c146100fa5780630e5fe9ef146101d5578063217fe6c614610217575b600080fd5b6101d36004803603604081101561011057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561014d57600080fd5b82018360208201111561015f57600080fd5b8035906020019184600183028401116401000000008311171561018157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107b8565b005b610201600480360360208110156101eb57600080fd5b8101908080359060200190929190505050610837565b6040518082815260200191505060405180910390f35b6102f06004803603604081101561022d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561026a57600080fd5b82018360208201111561027c57600080fd5b8035906020019184600183028401116401000000008311171561029e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610858565b604051808215151515815260200191505060405180910390f35b6103366004803603602081101561032057600080fd5b81019080803590602001909291905050506108dd565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103ae578082015181840152602081019050610393565b50505050905090810190601f1680156103db5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6103f36109cc565b005b6104376004803603602081101561040b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad6565b005b610441610c3d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610481578082015181840152602081019050610466565b50505050905090810190601f1680156104ae5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104c4610c76565b604051808215151515815260200191505060405180910390f35b6104e6610c89565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105546004803603602081101561053e57600080fd5b8101908080359060200190929190505050610cae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61059e610ce1565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105de5780820151818401526020810190506105c3565b50505050905090810190601f16801561060b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610621610d1a565b005b61069a6004803603602081101561063957600080fd5b810190808035906020019064010000000081111561065657600080fd5b82018360208201111561066857600080fd5b8035906020019184600183028401116401000000008311171561068a57600080fd5b9091929391929390505050610e24565b6040518082815260200191505060405180910390f35b6106dc600480360360208110156106c657600080fd5b8101908080359060200190929190505050611159565b6040518085815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561072e578082015181840152602081019050610713565b50505050905090810190601f16801561075b5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6107a26004803603604081101561078257600080fd5b81019080803590602001909291908035906020019092919050505061122e565b6040518082815260200191505060405180910390f35b610833826000836040518082805190602001908083835b602083106107f257805182526020820191506020810190506020830392506107cf565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902061125c90919063ffffffff16565b5050565b6004818154811061084457fe5b906000526020600020016000915090505481565b60006108d5836000846040518082805190602001908083835b602083106108945780518252602082019150602081019050602083039250610871565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902061127390919063ffffffff16565b905092915050565b600281815481106108ea57fe5b90600052602060002090600302016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109c25780601f10610997576101008083540402835291602001916109c2565b820191906000526020600020905b8154815290600101906020018083116109a557829003601f168201915b5050505050905083565b610a0b336040518060400160405280600e81526020017f726f6c652f7379732d61646d696e0000000000000000000000000000000000008152506107b8565b600160009054906101000a900460ff16610a8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4973206e6f74207061757365640000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600160006101000a81548160ff0219169083151502179055507f0e5e3b3fb504c22cf5c42fa07d521225937514c654007e1f12646f89768d6f9460405160405180910390a1565b610b15336040518060400160405280600e81526020017f726f6c652f7379732d61646d696e0000000000000000000000000000000000008152506107b8565b600160009054906101000a900460ff16610b97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4973206e6f74207061757365640000000000000000000000000000000000000081525060200191505060405180910390fd5b806001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6040518060400160405280600e81526020017f726f6c652f7379732d61646d696e00000000000000000000000000000000000081525081565b600160009054906101000a900460ff1681565b6001809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280601081526020017f726f6c652f73746f72652d6f776e65720000000000000000000000000000000081525081565b610d59336040518060400160405280600e81526020017f726f6c652f7379732d61646d696e0000000000000000000000000000000000008152506107b8565b600160009054906101000a900460ff1615610ddc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f416c72656164792050617573656400000000000000000000000000000000000081525060200191505060405180910390fd5b60018060006101000a81548160ff0219169083151502179055507fab35696f06e428ebc5ceba8cd17f8fed287baf43440206d1943af1ee53e6d26760405160405180910390a1565b6000600160009054906101000a900460ff1615610ea9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f416c72656164792050617573656400000000000000000000000000000000000081525060200191505060405180910390fd5b6000600280549050905060003390506004829080600181540180825580915050906001820390600052602060002001600090919290919091505550600260405180606001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff16815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610ff392919061145c565b50505050806007600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110cc816040518060400160405280601081526020017f726f6c652f73746f72652d6f776e6572000000000000000000000000000000008152506112cc565b8073ffffffffffffffffffffffffffffffffffffffff167f971d5202970f7df6de485a4f216b8e633cc033b64d287d015a021575001cd60683878760405180848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a2819250505092915050565b6003818154811061116657fe5b9060005260206000209060040201600091509050806000015490806001015490806002015490806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112245780601f106111f957610100808354040283529160200191611224565b820191906000526020600020905b81548152906001019060200180831161120757829003601f168201915b5050505050905084565b6008602052816000526040600020818154811061124757fe5b90600052602060002001600091509150505481565b6112668282611273565b61126f57600080fd5b5050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611347826000836040518082805190602001908083835b6020831061130657805182526020820191506020810190506020830392506112e3565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206113fe90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167fbfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b700489826040518080602001828103825283818151815260200191508051906020019080838360005b838110156113c05780820151818401526020810190506113a5565b50505050905090810190601f1680156113ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061149d57805160ff19168380011785556114cb565b828001600101855582156114cb579182015b828111156114ca5782518255916020019190600101906114af565b5b5090506114d891906114dc565b5090565b6114fe91905b808211156114fa5760008160009055506001016114e2565b5090565b9056fea165627a7a723058202221e9691c763b25decfafd0caaa20e701988ff25175ba917165fcb67275559a0029",
  "sourceMap": "121:695:8:-;;;789:5:12;768:26;;;;;;;;;;;;;;;;;;;;231:4;222:6;;:13;;;;;;;;;;;;;;;;;;292:35;300:10;312:14;;;;;;;;;;;;;;;;;292:7;;;:35;;:::i;:::-;337:37;345:10;357:16;;;;;;;;;;;;;;;;;337:7;;;:37;;:::i;:::-;121:695:8;;1483:148:17;1561:27;1578:9;1561:5;1567;1561:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1561:12:17;;;;;;;;;;;;;;;;;;;;;:16;;;;;;:27;;;;:::i;:::-;1609:9;1599:27;;;1620:5;1599:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1599:27:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:148;;:::o;320:96:18:-;407:4;387;:11;;:17;399:4;387:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;320:96;;:::o;121:695:8:-;;;;;;;",
  "deployedSourceMap": "121:695:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;121:695:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;959:121:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;959:121:17;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;959:121:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;959:121:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;959:121:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;959:121:17;;;;;;;;;;;;;;;:::i;:::-;;246:25:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;246:25:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1220:143:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1220:143:17;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1220:143:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1220:143:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1220:143:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1220:143:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;149:19:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;149:19:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;149:19:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1736:135:12;;;:::i;:::-;;1412:181;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1412:181:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;963:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;963:56:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;848:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;509:49:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;509:49:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1061:60:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1061:60:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1599:131;;;:::i;:::-;;316:498:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;316:498:8;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;316:498:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;316:498:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;316:498:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;195:19:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;195:19:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;195:19:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;602:46:13;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;959:121:17;1046:29;1065:9;1046:5;1052;1046:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1046:12:17;;;;;;;;;;;;;;;;;;;;;:18;;:29;;;;:::i;:::-;959:121;;:::o;246:25:13:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1220:143:17:-;1310:4;1331:27;1348:9;1331:5;1337;1331:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1331:12:17;;;;;;;;;;;;;;;;;;;;;:16;;:27;;;;:::i;:::-;1324:34;;1220:143;;;;:::o;149:19:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1736:135:12:-;1189:37;1199:10;1211:14;;;;;;;;;;;;;;;;;1189:9;:37::i;:::-;1337:6;;;;;;;;;;;1329:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1826:5;1817:6;;:14;;;;;;;;;;;;;;;;;;1846:18;;;;;;;;;;1736:135::o;1412:181::-;1189:37;1199:10;1211:14;;;;;;;;;;;;;;;;;1189:9;:37::i;:::-;1337:6;;;;;;;;;;;1329:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:8;1517:18;;:29;;;;;;;;;;;;;;;;;;1561:25;1577:8;1561:25;;;;;;;;;;;;;;;;;;;;;;1412:181;:::o;963:56::-;;;;;;;;;;;;;;;;;;;:::o;768:26::-;;;;;;;;;;;;;:::o;848:33::-;;;;;;;;;;;;;:::o;509:49:13:-;;;;;;;;;;;;;;;;;;;;;;:::o;1061:60:12:-;;;;;;;;;;;;;;;;;;;:::o;1599:131::-;1189:37;1199:10;1211:14;;;;;;;;;;;;;;;;;1189:9;:37::i;:::-;1270:6;;;;;;;;;;;1269:7;1261:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:4;1679:6;;:13;;;;;;;;;;;;;;;;;;1707:16;;;;;;;;;;1599:131::o;316:498:8:-;411:7;1270:6:12;;;;;;;;;;;1269:7;1261:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;434:14:8;451:5;:12;;;;434:29;;473:15;491:10;473:28;;512:8;526:6;512:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;512:21:8;;;;;;;;;;;;;;;;;;;;;;552:5;563:32;;;;;;;;568:6;563:32;;;;576:7;563:32;;;;;;585:9;;563:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;563:32:8;;;;;;;;;552:44;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;552:44:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;632:7;607:14;:22;622:6;607:22;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;675:6;650:13;:22;664:7;650:22;;;;;;;;;;;;;;;:31;;;;692:34;700:7;709:16;;;;;;;;;;;;;;;;;692:7;:34::i;:::-;764:7;742:41;;;756:6;773:9;;742:41;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;742:41:8;;;;;;;;;;;;;;;801:6;794:13;;;;316:498;;;;:::o;195:19:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;602:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;657:107:18:-;743:15;747:4;753;743:3;:15::i;:::-;735:24;;;;;;657:107;;:::o;842:124::-;923:4;944;:11;;:17;956:4;944:17;;;;;;;;;;;;;;;;;;;;;;;;;937:24;;842:124;;;;:::o;1483:148:17:-;1561:27;1578:9;1561:5;1567;1561:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1561:12:17;;;;;;;;;;;;;;;;;;;;;:16;;:27;;;;:::i;:::-;1609:9;1599:27;;;1620:5;1599:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1599:27:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:148;;:::o;320:96:18:-;407:4;387;:11;;:17;399:4;387:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;320:96;;:::o;121:695:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"contracts/BlockchainMarketBase.sol\";\nimport \"contracts/BlockchainMarketInterface.sol\";\n\ncontract UserFactory is BlockchainMarketBase {\n\n    BlockchainMarketInterface internal blockchainMarket;\n\n    event NewUserSignUp(uint256 userId, address indexed userAddr, string userName);\n\n    function signUp(string calldata _userName)\n        external\n        notPaused\n        returns (uint256)\n    {\n        uint256 userId = users.length;\n        address newUser = msg.sender;\n\n        UsersIds.push(userId);\n        \n        users.push(User(userId, newUser, _userName));\n\n        userRegistered[userId] = newUser;\n\n        addressUserId[newUser] = userId;\n\n        addRole(newUser, ROLE_STORE_OWNER);\n\n        emit NewUserSignUp(userId, newUser, _userName);\n\n        return userId;\n    }\n}",
  "sourcePath": "/Users/luminode/Training/blockchainmarket/contracts/UserFactory.sol",
  "ast": {
    "absolutePath": "/Users/luminode/Training/blockchainmarket/contracts/UserFactory.sol",
    "exportedSymbols": {
      "UserFactory": [
        697
      ]
    },
    "id": 698,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 621,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "contracts/BlockchainMarketBase.sol",
        "file": "contracts/BlockchainMarketBase.sol",
        "id": 622,
        "nodeType": "ImportDirective",
        "scope": 698,
        "sourceUnit": 1155,
        "src": "25:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BlockchainMarketInterface.sol",
        "file": "contracts/BlockchainMarketInterface.sol",
        "id": 623,
        "nodeType": "ImportDirective",
        "scope": 698,
        "sourceUnit": 1170,
        "src": "70:49:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 624,
              "name": "BlockchainMarketBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1154,
              "src": "145:20:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlockchainMarketBase_$1154",
                "typeString": "contract BlockchainMarketBase"
              }
            },
            "id": 625,
            "nodeType": "InheritanceSpecifier",
            "src": "145:20:8"
          }
        ],
        "contractDependencies": [
          1105,
          1154,
          1428
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 697,
        "linearizedBaseContracts": [
          697,
          1154,
          1105,
          1428
        ],
        "name": "UserFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 627,
            "name": "blockchainMarket",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "173:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BlockchainMarketInterface_$1169",
              "typeString": "contract BlockchainMarketInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 626,
              "name": "BlockchainMarketInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1169,
              "src": "173:25:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlockchainMarketInterface_$1169",
                "typeString": "contract BlockchainMarketInterface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 635,
            "name": "NewUserSignUp",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "indexed": false,
                  "name": "userId",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "251:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "251:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 631,
                  "indexed": true,
                  "name": "userAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "267:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "267:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "indexed": false,
                  "name": "userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "293:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "250:59:8"
            },
            "src": "231:79:8"
          },
          {
            "body": {
              "id": 695,
              "nodeType": "Block",
              "src": "424:390:8",
              "statements": [
                {
                  "assignments": [
                    645
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 645,
                      "name": "userId",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "434:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 644,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "434:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 646,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1113,
                      "src": "451:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_User_$1144_storage_$dyn_storage",
                        "typeString": "struct BlockchainMarketBase.User storage ref[] storage ref"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "451:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "434:29:8"
                },
                {
                  "assignments": [
                    650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 650,
                      "name": "newUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "473:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 649,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "473:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 653,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 651,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1646,
                      "src": "491:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "491:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "473:28:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 657,
                        "name": "userId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "526:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 654,
                        "name": "UsersIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "512:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "512:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "512:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "512:21:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 664,
                            "name": "userId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "568:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 665,
                            "name": "newUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "576:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 666,
                            "name": "_userName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "585:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 663,
                          "name": "User",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "563:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_User_$1144_storage_ptr_$",
                            "typeString": "type(struct BlockchainMarketBase.User storage pointer)"
                          }
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "563:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1144_memory",
                          "typeString": "struct BlockchainMarketBase.User memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$1144_memory",
                          "typeString": "struct BlockchainMarketBase.User memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 660,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1113,
                        "src": "552:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_User_$1144_storage_$dyn_storage",
                          "typeString": "struct BlockchainMarketBase.User storage ref[] storage ref"
                        }
                      },
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "552:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_User_$1144_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BlockchainMarketBase.User storage ref) returns (uint256)"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "552:44:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 670,
                        "name": "userRegistered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "607:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 672,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 671,
                        "name": "userId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "622:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "607:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 673,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "632:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "607:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "607:32:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 676,
                        "name": "addressUserId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "650:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 678,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 677,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "664:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "650:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 679,
                      "name": "userId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "675:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "650:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "650:31:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 683,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "700:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 684,
                        "name": "ROLE_STORE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "709:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 682,
                      "name": "addRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1395,
                      "src": "692:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "692:34:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 688,
                        "name": "userId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "756:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 689,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "764:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 690,
                        "name": "_userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 637,
                        "src": "773:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 687,
                      "name": "NewUserSignUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "742:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,string memory)"
                      }
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "742:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 692,
                  "nodeType": "EmitStatement",
                  "src": "737:46:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 693,
                    "name": "userId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 645,
                    "src": "801:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 643,
                  "id": 694,
                  "nodeType": "Return",
                  "src": "794:13:8"
                }
              ]
            },
            "documentation": null,
            "id": 696,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 640,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 639,
                  "name": "notPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1047,
                  "src": "384:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "384:9:8"
              }
            ],
            "name": "signUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 637,
                  "name": "_userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "332:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "331:27:8"
            },
            "returnParameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "411:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "410:9:8"
            },
            "scope": 697,
            "src": "316:498:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 698,
        "src": "121:695:8"
      }
    ],
    "src": "0:816:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/luminode/Training/blockchainmarket/contracts/UserFactory.sol",
    "exportedSymbols": {
      "UserFactory": [
        697
      ]
    },
    "id": 698,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 621,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "contracts/BlockchainMarketBase.sol",
        "file": "contracts/BlockchainMarketBase.sol",
        "id": 622,
        "nodeType": "ImportDirective",
        "scope": 698,
        "sourceUnit": 1155,
        "src": "25:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BlockchainMarketInterface.sol",
        "file": "contracts/BlockchainMarketInterface.sol",
        "id": 623,
        "nodeType": "ImportDirective",
        "scope": 698,
        "sourceUnit": 1170,
        "src": "70:49:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 624,
              "name": "BlockchainMarketBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1154,
              "src": "145:20:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlockchainMarketBase_$1154",
                "typeString": "contract BlockchainMarketBase"
              }
            },
            "id": 625,
            "nodeType": "InheritanceSpecifier",
            "src": "145:20:8"
          }
        ],
        "contractDependencies": [
          1105,
          1154,
          1428
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 697,
        "linearizedBaseContracts": [
          697,
          1154,
          1105,
          1428
        ],
        "name": "UserFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 627,
            "name": "blockchainMarket",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "173:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BlockchainMarketInterface_$1169",
              "typeString": "contract BlockchainMarketInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 626,
              "name": "BlockchainMarketInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1169,
              "src": "173:25:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlockchainMarketInterface_$1169",
                "typeString": "contract BlockchainMarketInterface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 635,
            "name": "NewUserSignUp",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "indexed": false,
                  "name": "userId",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "251:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "251:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 631,
                  "indexed": true,
                  "name": "userAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "267:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "267:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "indexed": false,
                  "name": "userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "293:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "250:59:8"
            },
            "src": "231:79:8"
          },
          {
            "body": {
              "id": 695,
              "nodeType": "Block",
              "src": "424:390:8",
              "statements": [
                {
                  "assignments": [
                    645
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 645,
                      "name": "userId",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "434:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 644,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "434:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 646,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1113,
                      "src": "451:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_User_$1144_storage_$dyn_storage",
                        "typeString": "struct BlockchainMarketBase.User storage ref[] storage ref"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "451:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "434:29:8"
                },
                {
                  "assignments": [
                    650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 650,
                      "name": "newUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "473:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 649,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "473:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 653,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 651,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1646,
                      "src": "491:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "491:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "473:28:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 657,
                        "name": "userId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "526:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 654,
                        "name": "UsersIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "512:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "512:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "512:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "512:21:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 664,
                            "name": "userId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "568:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 665,
                            "name": "newUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "576:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 666,
                            "name": "_userName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "585:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 663,
                          "name": "User",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "563:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_User_$1144_storage_ptr_$",
                            "typeString": "type(struct BlockchainMarketBase.User storage pointer)"
                          }
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "563:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1144_memory",
                          "typeString": "struct BlockchainMarketBase.User memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$1144_memory",
                          "typeString": "struct BlockchainMarketBase.User memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 660,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1113,
                        "src": "552:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_User_$1144_storage_$dyn_storage",
                          "typeString": "struct BlockchainMarketBase.User storage ref[] storage ref"
                        }
                      },
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "552:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_User_$1144_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BlockchainMarketBase.User storage ref) returns (uint256)"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "552:44:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 670,
                        "name": "userRegistered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "607:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 672,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 671,
                        "name": "userId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "622:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "607:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 673,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "632:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "607:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "607:32:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 676,
                        "name": "addressUserId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "650:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 678,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 677,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "664:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "650:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 679,
                      "name": "userId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "675:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "650:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "650:31:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 683,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "700:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 684,
                        "name": "ROLE_STORE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "709:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 682,
                      "name": "addRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1395,
                      "src": "692:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "692:34:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 688,
                        "name": "userId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "756:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 689,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "764:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 690,
                        "name": "_userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 637,
                        "src": "773:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 687,
                      "name": "NewUserSignUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "742:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,string memory)"
                      }
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "742:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 692,
                  "nodeType": "EmitStatement",
                  "src": "737:46:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 693,
                    "name": "userId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 645,
                    "src": "801:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 643,
                  "id": 694,
                  "nodeType": "Return",
                  "src": "794:13:8"
                }
              ]
            },
            "documentation": null,
            "id": 696,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 640,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 639,
                  "name": "notPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1047,
                  "src": "384:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "384:9:8"
              }
            ],
            "name": "signUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 637,
                  "name": "_userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "332:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "331:27:8"
            },
            "returnParameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "411:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "410:9:8"
            },
            "scope": 697,
            "src": "316:498:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 698,
        "src": "121:695:8"
      }
    ],
    "src": "0:816:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-26T08:27:50.661Z",
  "devdoc": {
    "methods": {
      "checkRole(address,string)": {
        "details": "reverts if addr does not have role",
        "params": {
          "_operator": "address",
          "_role": "the name of the role // reverts"
        }
      },
      "hasRole(address,string)": {
        "details": "determine if addr has role",
        "params": {
          "_operator": "address",
          "_role": "the name of the role"
        },
        "return": "bool"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}